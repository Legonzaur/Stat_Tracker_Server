openapi: 3.1.0
x-stoplight:
  id: gr7tm5a03g740
info:
  title: OpenAPI
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /weapons/:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Weapon'
      operationId: get-weapons
      description: ''
  /maps/:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Map'
      operationId: get-maps
  '/players/id/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get Player by Username
      tags: []
      responses:
        '200':
          description: Player Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
              examples:
                Get User Alice Smith:
                  value:
                    id: 142
                    firstName: Alice
                    lastName: Smith
                    email: alice.smith@gmail.com
                    dateOfBirth: '1997-10-31'
                    emailVerified: true
                    signUpDate: '2019-08-24'
        '404':
          description: User Not Found
      operationId: get-player-by-id
      description: Retrieve the information of the player with the matching id
  '/players/name/{name}':
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
    get:
      summary: Get Player by ID
      tags: []
      responses:
        '200':
          description: Player Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        '404':
          description: Player Not Found
      operationId: get-player-by-name
      description: ''
  /servers/:
    get:
      summary: Get Server list
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Server'
      operationId: get-servers
  '/servers/{serverId}':
    parameters:
      - name: serverId
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get Server report
      operationId: get-server-player-report
      responses:
        '200':
          description: OK
  '/servers/{serverId}/kills':
    post:
      summary: Post kills
      operationId: post-kills
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
        '401':
          description: Unauthorized
      parameters: []
      security:
        - server_token: []
      description: Allows a Northstar server to record kills on the database
    parameters:
      - $ref: '#/components/parameters/serverId'
  '/servers/{serverId}/weapons':
    get:
      summary: Get Weapon report for server
      tags: []
      responses: {}
      operationId: get-server-weapons-report
      parameters: []
      x-internal: false
    parameters:
      - $ref: '#/components/parameters/serverId'
components:
  schemas:
    Player:
      title: Player
      x-stoplight:
        id: be41fcacb2693
      type: object
      examples: []
      properties:
        id:
          $ref: '#/components/schemas/PlayerID'
          description: Unique identifier for the given user.
        name:
          type: string
          example: Legonzaur
      required:
        - id
    Weapon:
      title: Weapon
      x-stoplight:
        id: 7zc6t20eh3pcc
      type: object
      properties:
        id:
          $ref: '#/components/schemas/WeaponID'
        internal:
          type: string
          example: mp_weapon_sniper
        name:
          type: string
          example: Kraber
        description:
          type: string
        image:
          type: string
          format: uri
          example: 'https://static.wikia.nocookie.net/titanfall_gamepedia/images/8/8b/Icon_kraber.png'
      required:
        - id
        - internal
    Map:
      title: Map
      x-stoplight:
        id: hoh2m6pr6gli7
      type: object
      properties:
        id:
          $ref: '#/components/schemas/MapID'
        internal:
          type: string
          example: mp_angel_city
        name:
          type: string
          example: Angel City
        description:
          type: string
        image:
          type: string
          format: uri
      required:
        - id
        - internal
    Server:
      title: Server
      x-stoplight:
        id: hjfwmi2ae419o
      type: object
      properties:
        id:
          type: string
        token:
          type: string
        name:
          type: string
    Kill:
      title: Kill
      x-stoplight:
        id: a9q2tvsts3z32
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        server:
          type: string
          example: fvnkhead's 7v7
        damage_source:
          $ref: '#/components/schemas/WeaponID'
        attacker:
          $ref: '#/components/schemas/PlayerID'
        attacker_type:
          type: string
        attacker_weapon:
          $ref: '#/components/schemas/WeaponID'
        attacker_weapon_2:
          $ref: '#/components/schemas/WeaponID'
        attacker_weapon_3:
          $ref: '#/components/schemas/WeaponID'
        attacker_ordnance:
          $ref: '#/components/schemas/WeaponID'
        attacker_ability:
          $ref: '#/components/schemas/WeaponID'
        attacker_kit_1:
          $ref: '#/components/schemas/WeaponID'
        attacker_kit_2:
          $ref: '#/components/schemas/WeaponID'
        victim:
          $ref: '#/components/schemas/PlayerID'
        victim_weapon:
          $ref: '#/components/schemas/WeaponID'
        victim_weapon_2:
          $ref: '#/components/schemas/WeaponID'
        victim_weapon_3:
          $ref: '#/components/schemas/WeaponID'
        victim_ordnance:
          $ref: '#/components/schemas/WeaponID'
        victim_ability:
          $ref: '#/components/schemas/WeaponID'
        victim_kit_1:
          $ref: '#/components/schemas/WeaponID'
        victim_kit_2:
          $ref: '#/components/schemas/WeaponID'
        map:
          $ref: '#/components/schemas/MapID'
        distance:
          type: number
          example: 35.45
        date:
          type: string
          format: date-time
          readOnly: true
      required:
        - server
        - attacker_type
        - victim
    PlayerID:
      title: EntityID
      x-stoplight:
        id: 9icavmq5bgsqp
      type: integer
    WeaponID:
      title: WeaponID
      x-stoplight:
        id: p92aomkxku2po
      type: integer
      description: ''
    MapID:
      title: MapID
      x-stoplight:
        id: zoazw8eoi7qwr
      type: integer
  securitySchemes:
    server_token:
      name: API Key
      type: apiKey
      in: header
      description: ''
  parameters:
    serverId:
      name: serverId
      in: path
      required: true
      schema:
        type: string
    playerId:
      name: playerId
      in: path
      required: true
      schema:
        type: string
  responses:
    Server-report:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
    Player-server-report:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              player:
                $ref: '#/components/schemas/Player'
              server:
                $ref: '#/components/schemas/Server'
              total_kills:
                type: integer
              first_record:
                type: string
                format: date-time
              last_record:
                type: string
                format: date-time
              most_used_weapons:
                type:
                  - array
                maxItems: 5
                items:
                  type: object
                  additionalProperties: false
              preferred_maps:
                type: array
                items:
                  type: object
          examples: {}
    Player-report:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              player:
                type: string
